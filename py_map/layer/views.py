from layer.renderers import PNGBinaryFileRenderer
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.request import Request
import requests
from layer.services import GlobalMercatorService as Mercator


class TileMapService(APIView):
    renderer_classes = (PNGBinaryFileRenderer,)

    def get(self, request: Request, format=None):
        """
        Receive z, x, y informations
        Call the tile map server
        Return the corresponding tile
        """

        url = 'https://tile.waymarkedtrails.org/hiking/{z}/{x}/{y}.png'.format(z=request.query_params['z'],
                                                                               x=request.query_params['x'],
                                                                               y=request.query_params['y'],)
        response = requests.get(url)

        return Response(response.content)


class WebMapService(APIView):
    renderer_classes = (PNGBinaryFileRenderer,)

    def get(self, request, format=None):
        """
        Receive z, x, y informations
        Call the wms map server
        Return the corresponding tile
        """

        return Response(self.__get_tile(z=int(request.query_params['z']),
                                        x=int(request.query_params['x']),
                                        y=int(request.query_params['y']),))

    def __get_tile(self, z, x, y):
        """
        Convert tile position in Mercatore coordinates
        Return WSM tile generated by the mapserver
        """
        mercator = Mercator()
        # tx, ty = mercator.GoogleTile(x, y, z)
        minX, minY, maxX, maxY = mercator.TileBounds(x, y, z)

        # minlat, minlon = mercator.MetersToLatLon(minx, miny)
        # maxlat, maxlon = mercator.MetersToLatLon(maxx, maxy)

        url = "http://localhost:8080/?map=/etc/mapserver/mapfiles/layers/BASELAYER_UNmapCORE.map&service=WMS&" \
              "request=GetMap&layers=UNmapCORE&styles=&format=image/jpeg&version=1.1.1&transparency=true&width=256&" \
              "height=256&srs=EPSG:3857&bbox={minX},{minY},{maxX},{maxY}" \
              .format(minX=minX, minY=minY, maxX=maxX, maxY=maxY)

        response = requests.get(url)

        return response.content
